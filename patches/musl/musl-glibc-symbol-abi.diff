--- a/include/sys/mman.h
+++ b/include/sys/mman.h
@@ -146,6 +146,10 @@
 #define off64_t off_t
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(mmap, mmap64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/sys/resource.h
+++ b/include/sys/resource.h
@@ -107,6 +107,13 @@
 
 #if _REDIR_TIME64
 __REDIR(getrusage, __getrusage_time64);
+#ifndef NO_GLIBC_ABI_COMPATIBLE
+__REDIR(getrlimit, getrlimit64);
+__REDIR(setrlimit, setrlimit64);
+#ifdef _GNU_SOURCE
+__REDIR(prlimit, prlimit64);
+#endif
+#endif
 #endif
 
 #ifdef __cplusplus
--- a/include/sys/sendfile.h
+++ b/include/sys/sendfile.h
@@ -15,6 +15,10 @@
 #define off64_t off_t
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(sendfile, sendfile64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/sys/statfs.h
+++ b/include/sys/statfs.h
@@ -25,6 +25,11 @@
 #define fsfilcnt64_t fsfilcnt_t
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(statfs, statfs64);
+__REDIR(fstatfs, fstatfs64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/sys/statvfs.h
+++ b/include/sys/statvfs.h
@@ -49,6 +49,11 @@
 #define fsfilcnt64_t fsfilcnt_t
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(statvfs, statvfs64);
+__REDIR(fstatvfs, fstatvfs64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/sys/uio.h
+++ b/include/sys/uio.h
@@ -34,6 +34,11 @@
 #define pwritev64 pwritev
 #define off64_t off_t
 #endif
+
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(preadv, preadv64);
+__REDIR(pwritev, pwritev64);
+#endif
 #endif
 
 #ifdef _GNU_SOURCE
--- a/include/aio.h
+++ b/include/aio.h
@@ -64,6 +64,15 @@
 
 #if _REDIR_TIME64
 __REDIR(aio_suspend, __aio_suspend_time64);
+#ifndef NO_GLIBC_ABI_COMPATIBLE
+__REDIR(aio_read, aio_read64);
+__REDIR(aio_write, aio_write64);
+__REDIR(aio_error, aio_error64);
+__REDIR(aio_return, aio_return64);
+__REDIR(aio_cancel, aio_cancel64);
+__REDIR(aio_fsync, aio_fsync64);
+__REDIR(lio_listio, lio_listio64);
+#endif
 #endif
 
 #ifdef __cplusplus
--- a/include/dirent.h
+++ b/include/dirent.h
@@ -68,6 +68,20 @@
 #define getdents64 getdents
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(readdir, readdir64);
+__REDIR(readdir_r, readdir64_r);
+__REDIR(scandir, scandir64);
+__REDIR(alphasort, alphasort64);
+#ifdef _GNU_SOURCE
+__REDIR(versionsort, versionsort64);
+#endif
+#endif
+
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && (defined(_GNU_SOURCE) || defined(_BSD_SOURCE))
+__REDIR(getdents, getdents64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/dlfcn.h
+++ b/include/dlfcn.h
@@ -35,8 +35,13 @@
 int dlinfo(void *, int, void *);
 #endif
 
-#if _REDIR_TIME64
-__REDIR(dlsym, __dlsym_time64);
+#ifndef NO_GLIBC_ABI_COMPATIBLE
+__attribute__((noinline, __weak__)) void *dlmopen(long int nsid, const char *file, int mode)
+{
+	return dlopen(file, mode);
+}
+
+#define dlopen(...) dlmopen(0, __VA_ARGS__)
 #endif
 
 #ifdef __cplusplus
--- a/include/fcntl.h
+++ b/include/fcntl.h
@@ -209,6 +209,21 @@
 #define off64_t off_t
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(open, open64);
+__REDIR(openat, openat64);
+__REDIR(creat, creat64);
+#if !defined(__REDIR_LOCKF) && (defined(_GNU_SOURCE) || defined(_BSD_SOURCE))
+#define __REDIR_LOCKF
+__REDIR(lockf, lockf64);
+#endif
+__REDIR(posix_fadvise, posix_fadvise64);
+__REDIR(posix_fallocate, posix_fallocate64);
+#if defined(_GNU_SOURCE)
+__REDIR(fallocate, fallocate64);
+#endif
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/ftw.h
+++ b/include/ftw.h
@@ -34,6 +34,11 @@
 #define nftw64 nftw
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(ftw, ftw64);
+__REDIR(nftw, nftw64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/glob.h
+++ b/include/glob.h
@@ -45,6 +45,11 @@
 #define glob64_t glob_t
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(glob, glob64);
+__REDIR(globfree, globfree64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/libgen.h
+++ b/include/libgen.h
@@ -8,6 +8,10 @@
 char *dirname(char *);
 char *basename(char *);
 
+#ifndef NO_GLIBC_ABI_COMPATIBLE
+__REDIR(basename, __xpg_basename);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/pthread.h
+++ b/include/pthread.h
@@ -207,6 +207,7 @@
 	void (*__f)(void *);
 	void *__x;
 	struct __ptcb *__next;
+	void *__unused;
 };
 
 void _pthread_cleanup_push(struct __ptcb *, void (*)(void *), void *);
--- a/include/setjmp.h
+++ b/include/setjmp.h
@@ -27,6 +27,9 @@
 typedef jmp_buf sigjmp_buf;
 int sigsetjmp (sigjmp_buf, int) __setjmp_attr;
 _Noreturn void siglongjmp (sigjmp_buf, int);
+#ifndef NO_GLIBC_ABI_COMPATIBLE
+__REDIR(sigsetjmp, __sigsetjmp);
+#endif
 #endif
 
 #if defined(_XOPEN_SOURCE) || defined(_GNU_SOURCE) \
--- a/include/stdio.h
+++ b/include/stdio.h
@@ -217,6 +217,16 @@
 #define off64_t off_t
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(tmpfile, tmpfile64);
+__REDIR(fopen, fopen64);
+__REDIR(freopen, freopen64);
+__REDIR(fseeko, fseeko64);
+__REDIR(ftello, ftello64);
+__REDIR(fgetpos, fgetpos64);
+__REDIR(fsetpos, fsetpos64);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/stdlib.h
+++ b/include/stdlib.h
@@ -172,6 +172,15 @@
 #endif
 #endif
 
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(mkstemp, mkstemp64);
+__REDIR(mkostemp, mkostemp64);
+#if defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
+__REDIR(mkstemps, mkstemps64);
+__REDIR(mkostemps, mkostemps64);
+#endif
+#endif
+
 #ifdef __cplusplus
 }
 #endif
--- a/include/string.h
+++ b/include/string.h
@@ -82,8 +82,10 @@
 
 #if defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
 char *strsep(char **, const char *);
+#if defined(NO_GLIBC_ABI_COMPATIBLE)
 size_t strlcat (char *, const char *, size_t);
 size_t strlcpy (char *, const char *, size_t);
+#endif
 void explicit_bzero (void *, size_t);
 #endif
 
--- a/include/unistd.h
+++ b/include/unistd.h
@@ -206,6 +206,18 @@
 #define ftruncate64 ftruncate
 #define lockf64 lockf
 #define off64_t off_t
+#endif
+
+#if !defined(NO_GLIBC_ABI_COMPATIBLE) && _REDIR_TIME64
+__REDIR(lseek, lseek64);
+__REDIR(pread, pread64);
+__REDIR(pwrite, pwrite64);
+__REDIR(truncate, truncate64);
+__REDIR(ftruncate, ftruncate64);
+#if !defined(__REDIR_LOCKF) && (defined(_XOPEN_SOURCE) || defined(_GNU_SOURCE) || defined(_BSD_SOURCE))
+#define __REDIR_LOCKF
+__REDIR(lockf, lockf64);
+#endif
 #endif
 
 #define POSIX_CLOSE_RESTART     0
